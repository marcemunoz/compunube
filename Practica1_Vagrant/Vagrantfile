# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.no_install = true
    config.vbguest.auto_update = false
    config.vbguest.no_remote = true
  end

  # ----------------- CLIENTE UBUNTU -----------------
  config.vm.define "clienteUbu" do |clienteUbu|
    clienteUbu.vm.box = "bento/ubuntu-18.04"
    clienteUbu.vm.network "private_network", ip: "192.168.100.11"
    clienteUbu.vm.hostname = "clienteUbu"
    clienteUbu.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
    end

    clienteUbu.vm.provision "shell", inline: <<-SHELL
      sudo apt update -y
      sudo apt install -y snapd
      sudo snap install lxd || true
      sudo usermod -aG lxd vagrant
      newgrp lxd
      lxd init --auto || true
      sleep 5

      # Contenedores web2, web3
      for c in web2 web3; do
        if ! lxc list $c --format csv | grep -q $c; then
          lxc launch ubuntu:18.04 $c
          sleep 10
          lxc exec $c -- apt update -y
          lxc exec $c -- apt install -y apache2
          lxc exec $c -- bash -c "echo '<h1>Hello from $c</h1>' > /var/www/html/index.html"
          PORT=8080
          [[ "$c" == "web3" ]] && PORT=8081
          lxc config device add $c http proxy listen=tcp:0.0.0.0:$PORT connect=tcp:127.0.0.1:80 || true
        fi
      done
    SHELL
  end

  # ----------------- MONITOR UBUNTU -----------------
  config.vm.define "monitorUbu" do |monitorUbu|
    monitorUbu.vm.box = "bento/ubuntu-18.04"
    monitorUbu.vm.network "private_network", ip: "192.168.100.13"
    monitorUbu.vm.hostname = "monitorUbu"
    monitorUbu.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.cpus = 1
    end

    monitorUbu.vm.provision "shell", inline: <<-SHELL
      sudo apt update -y
      sudo apt install -y snapd
      sudo snap install lxd || true
      sudo usermod -aG lxd vagrant
      newgrp lxd
      lxd init --auto || true
      sleep 5

      # Contenedor web4
      if ! lxc list web4 --format csv | grep -q web4; then
        lxc launch ubuntu:18.04 web4
        sleep 10
        lxc exec web4 -- apt update -y
        lxc exec web4 -- apt install -y apache2
        lxc exec web4 -- bash -c "echo '<h1>Hello from web4</h1>' > /var/www/html/index.html"
        lxc config device add web4 http proxy listen=tcp:0.0.0.0:8082 connect=tcp:127.0.0.1:80 || true
      fi
    SHELL
  end
 # ----------------- SERVIDOR -----------------
  config.vm.define "servidorUbu" do |servidorUbu|
    servidorUbu.vm.box = "bento/ubuntu-18.04"
    servidorUbu.vm.network "private_network", ip: "192.168.100.12"
    servidorUbu.vm.hostname = "servidorUbu"
    servidorUbu.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      vb.cpus = 2
    end

    servidorUbu.vm.provision "shell", inline: <<-SHELL
      sudo apt update -y
      sudo apt install -y snapd
      sudo snap install lxd

      sudo usermod -aG lxd vagrant
      newgrp lxd

      lxd init --auto
      sleep 5

      # Crear contenedor web1
      lxc launch ubuntu:18.04 web1
      sleep 10
      lxc exec web1 -- apt update -y
      lxc exec web1 -- apt install -y apache2
      lxc exec web1 -- mkdir -p /var/www/html
      lxc exec web1 -- tee /var/www/html/index.html <<< "<h1>Hello from web1</h1>"
      lxc config device add web1 http proxy listen=tcp:0.0.0.0:80 connect=tcp:127.0.0.1:80

      # Crear contenedor haproxy
      lxc launch ubuntu:18.04 haproxy
      sleep 10
      lxc exec haproxy -- apt update -y
      lxc exec haproxy -- apt install -y haproxy

      # Configuración mínima de HAProxy apuntando a las IP de las máquinas
      lxc exec haproxy -- bash -c "cat > /etc/haproxy/haproxy.cfg <<'EOF'
global
    log /dev/log local0
    log /dev/log local1 notice
    maxconn 2048
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5s
    timeout client  50s
    timeout server  50s

# FRONTEND: donde escucha HAProxy
frontend http
    bind *:80
    default_backend web-backend

# BACKEND: los servidores web reales
backend web-backend
    balance roundrobin

    # Panel de estadísticas
    stats enable
    stats uri /haproxy?stats
    stats auth admin:admin

    # Tus servidores web
    server web1 192.168.100.12:80 check
    server web2 192.168.100.11:8080 check
    server web3 192.168.100.11:8081 check backup
    server web4 192.168.100.13:8082 check backup

     # Página personalizada si no hay servidores disponibles
    errorfile 503 /etc/haproxy/errors/503.http
    
EOF"

      lxc exec haproxy -- systemctl restart haproxy
    SHELL
  end
end

  